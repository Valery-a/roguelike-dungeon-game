@using System

@page "/BlazorDungeon"

<PageTitle>BlazorDungeon</PageTitle>

<h1>BlazorDungeon</h1>

<a href="https://github.com/dotnet/dotnet-console-games/tree/main/Projects/2048" alt="Go To Readme">
	<img title="Go To Readme" alt="Go To Readme" src="https://raw.githubusercontent.com/dotnet/dotnet-console-games/main/.github/resources/readme-black.svg">
</a>

<div class="console-window text-center my-3" @onkeydown="@BlazorConsole.OnKeyDown" tabindex="0">
	<div class="d-inline-block bg-dark text-light border p-2 text-start shadow padding-0">
		<pre class="console">
		<code>@BlazorConsole.State</code>
		</pre>
	</div>
	<div>
		@*<button class="btn btn-primary" @onclick="() => BlazorConsole.EnqueueInput(ConsoleKey.Enter)     ">enter</button>*@
	</div>
</div>

<div class="alert alert-secondary" role="alert">
	&#9000; Keyboard input is supported if you <strong>click</strong> on the game.
</div>

<div class="alert alert-secondary" role="alert">
	&#8635; You can restart the game by <strong>refreshing</strong> the page.
</div>

@code
{
	public BlazorDungeon()
	{
		BlazorConsole.WindowWidth = 180;
		BlazorConsole.WindowHeight = 70;
		BlazorConsole.TriggerRefresh = StateHasChanged;
	}

	protected override void OnInitialized() => InvokeAsync(Dungeon.DungeonMain);
}
